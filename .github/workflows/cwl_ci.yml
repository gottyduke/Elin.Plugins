name: Custom Whatever Loader CI Deploy

on:
  push:
    branches: ["*"]
    paths: ["CustomWhateverLoader/**"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  build-and-upload:
    name: Build
    runs-on: windows-2025

    strategy:
      matrix:
        version: [stable, nightly]
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          sparse-checkout: |
            CustomWhateverLoader/
            Directory.Build.props
            global.json
          sparse-checkout-cone-mode: false

      - name: Checkout Deps
        uses: actions/checkout@v5
        with:
          path: ${{ matrix.version }}
          ref: ${{ matrix.version }}
          repository: gottyduke/Elin.Plugins.BuildDeps
          ssh-key: ${{ secrets.DEPS_DEPLOY_KEY }}

      - name: Setup DotNet
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 10.0.x
          dotnet-quality: preview
          cache: true
          cache-dependency-path: ${{ github.workspace }}\CustomWhateverLoader\packages.lock.json

      - name: Setup Packages
        run: dotnet restore ${{ github.workspace }}\CustomWhateverLoader\ --locked-mode

      - name: Build
        id: build
        env:
          ElinGamePath: ${{ github.workspace }}\${{ matrix.version }}
        shell: pwsh
        run: |
          $config = '${{ matrix.version }}' -eq 'stable' ? 'Debug' : 'DebugNightly'
          dotnet build ${{ github.workspace }}\CustomWhateverLoader\CustomWhateverLoader.csproj -o ${{ github.workspace }}\out\${{ matrix.version }} -c $config --no-restore

          $dllPath = Join-Path -Path "${{ github.workspace }}\out\${{ matrix.version }}" -ChildPath "CustomWhateverLoader.dll"
          $fileVersion = (Get-Item -Path $dllPath).VersionInfo.FileVersion
          echo "file_version=$fileVersion" >> $env:GITHUB_OUTPUT
          echo "file_name=cwl-ci-builds-$fileVersion-${{ matrix.version }}" >> $env:GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.build.outputs.file_name }}
          path: ${{ github.workspace }}\out\${{ matrix.version }}

      - name: Prepare Release
        id: artifact
        shell: pwsh
        run: |
          $source = "${{ github.workspace }}\out\${{ matrix.version }}"
          $destination = "${{ github.workspace }}\out\${{ matrix.version }}\cwl-ci-builds-${{ matrix.version }}.zip"

          Compress-Archive -Path "$source\*" -DestinationPath $destination -Force
          $path = $destination -Replace '\\', '/'

          echo "artifact_path=$path" >> $env:GITHUB_OUTPUT

      - name: Create or Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: CustomWhateverLoader
          name: Custom Whatever Loader ${{ steps.build.outputs.file_version }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: ${{ steps.artifact.outputs.artifact_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}