name: Emmersive Elin CI Deploy

on:
  push:
    branches: ["*"]
    paths: ["Emmersive/**"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build-and-upload:
    name: Build
    runs-on: windows-2025

    strategy:
      matrix:
        version: [stable, nightly]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          sparse-checkout: |
            CustomWhateverLoader/
            Emmersive/
            Directory.Build.props
          sparse-checkout-cone-mode: false

      - name: Checkout Deps
        uses: actions/checkout@v5
        with:
          path: ${{ matrix.version }}
          ref: ${{ matrix.version }}
          repository: gottyduke/Elin.Plugins.BuildDeps
          ssh-key: ${{ secrets.DEPS_DEPLOY_KEY }}

      - name: Setup DotNet
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: ${{ github.workspace }}\global.json
          cache: true
          cache-dependency-path: |
            ${{ github.workspace }}\CustomWhateverLoader\packages.lock.json,
            ${{ github.workspace }}\Emmersive\packages.lock.json,

      - name: Setup Packages
        run: |
          dotnet restore ${{ github.workspace }}\CustomWhateverLoader\ --locked-mode
          dotnet restore ${{ github.workspace }}\Emmersive\ --locked-mode

      - name: Build
        id: build
        env:
          ElinGamePath: ${{ github.workspace }}\${{ matrix.version }}
        shell: pwsh
        run: |
          $config = '${{ matrix.version }}' -eq 'stable' ? 'Debug' : 'DebugNightly'
          dotnet build ${{ github.workspace }}\Emmersive\Emmersive.csproj -o ${{ github.workspace }}\out\${{ matrix.version }} -c $config --no-restore

          $dllPath = Join-Path -Path "${{ github.workspace }}\out\${{ matrix.version }}" -ChildPath "Emmersive.dll"
          $fileVersion = (Get-Item -Path $dllPath).VersionInfo.FileVersion
          echo "file_version=$fileVersion" >> $env:GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: emmersive-ci-builds-${{ steps.build.outputs.file_version }}-${{ matrix.version }}
          path: ${{ github.workspace }}\out\${{ matrix.version }}
